# -*- coding: utf-8 -*-
"""Copy of Evidence_House_Hackathon.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OZjzZiUd0BklNTh6TG-oByaWKKYqPtLU
"""

!pip install python-dotenv
!pip install openai
!pip install --upgrade langchain

import os
import openai
from langchain.chat_models import ChatOpenAI
from langchain.prompts import ChatPromptTemplate
from langchain.chains import SequentialChain


from dotenv import load_dotenv, find_dotenv
_ = load_dotenv(find_dotenv()) # read local .env file
openai.api_key = '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' #os.environ['OPENAI_API_KEY']

def get_completion(prompt, model="gpt-3.5-turbo"):
    openai.api_key = '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' #os.environ['OPENAI_API_KEY']
    messages = [{"role": "user", "content": prompt}]
    response = openai.ChatCompletion.create(
        model=model,
        messages=messages,
        temperature=0.9,
    )
    return response.choices[0].message["content"]


def create_applicants(text):
  first_prompt= f"""Give us three examples of applications suitable to the above job description and give specific examples where each applicant has demonstrated Civil service behaviours based on the file here:https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/717275/CS_Behaviours_2018.pdf  \
that could be suitable for the text that is delimited by triple backticks .\
Include specific examples where candidate has demonstrated the civil service behavior in a previous role , relevent skills , years of experience,
qualification.

Please do not use names but refer to them as applicant 1,2,..

text:```{text}```

Format the output as JSON with the following keys:
applicant
"""
applicants_response = get_completion(first_prompt)
return appplicants_response

def get_summary(text):
  second_prompt= f"""write a summary of each applicant with categories:
skills, years of experience.  \
and rank the applicants and give a one short summary reasoning of the ranking.

text:```{applicants_response}```

Format the output as JSON with the following keys:
skills
years of experinece
ranking
reasoning of ranking
"""
applicants_response = get_completion(first_prompt)
return appplicants_response